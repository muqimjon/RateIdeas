# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Production

on:
  pull_request:
    branches: [ deploy ]

jobs:
  build-api:
    name: Build backend
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore ./src/backend/RateIdeas.WebApi/
    - name: Build
      run: dotnet build --configuration Release --verbosity normal ./src/backend/RateIdeas.WebApi/

  dockerize-api:
    name: Dockerize backend
    needs: build-api
    runs-on: ubuntu-latest

    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      PROJECT: ${{ secrets.PROJECT }}

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Login to DockerHub
      run: |
        echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin
    - name: Build and push
      run: |
        docker build --tag $DOCKER_USERNAME/$PROJECT --file ./src/backend/RateIdeas.WebApi/Dockerfile .
        docker push $DOCKER_USERNAME/$PROJECT

  deploy:
    name: Deploy
    needs:
      - dockerize-api
    runs-on: ubuntu-latest

    steps:
      - name: SSH into AWS Ubuntu Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ~/app
            docker-compose pull
            docker rmi $(docker images --quiet --filter dangling=true)
            docker-compose up --detach
